// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Via.Persistence.Context;

#nullable disable

namespace Via.Persistence.Migrations
{
    [DbContext(typeof(ViaBaseContext))]
    partial class ViaBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Via.Domain.Entities.CardGame.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CopyCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PngUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Via.Domain.Entities.Deneme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Denemes", (string)null);
                });

            modelBuilder.Entity("Via.Domain.Entities.CardGame.EquipmentCards", b =>
                {
                    b.HasBaseType("Via.Domain.Entities.CardGame.Card");

                    b.Property<string>("Bonus")
                        .HasColumnType("text");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<string>("Talk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("EquipmentCards");
                });

            modelBuilder.Entity("Via.Domain.Entities.CardGame.MoneyCards", b =>
                {
                    b.HasBaseType("Via.Domain.Entities.CardGame.Card");

                    b.Property<int>("Gain")
                        .HasColumnType("integer");

                    b.Property<string>("Talk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("MoneyCards");
                });

            modelBuilder.Entity("Via.Domain.Entities.CardGame.MonsterCards", b =>
                {
                    b.HasBaseType("Via.Domain.Entities.CardGame.Card");

                    b.Property<int>("Attack")
                        .HasColumnType("integer");

                    b.Property<string>("Bonus")
                        .HasColumnType("text");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Shield")
                        .HasColumnType("integer");

                    b.Property<string>("Talk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("MonsterCards");
                });

            modelBuilder.Entity("Via.Domain.Entities.CardGame.PotionCards", b =>
                {
                    b.HasBaseType("Via.Domain.Entities.CardGame.Card");

                    b.Property<string>("Bonus")
                        .HasColumnType("text");

                    b.Property<int>("HealthGain")
                        .HasColumnType("integer");

                    b.Property<int>("MoneyGain")
                        .HasColumnType("integer");

                    b.Property<string>("Talk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("PotionCards");
                });
#pragma warning restore 612, 618
        }
    }
}
